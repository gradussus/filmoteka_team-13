{"mappings":"4oBAAA,MAAMA,EAAO,CACXC,SAAUC,SAASC,cAAc,aACjCC,SAAUF,SAASC,cAAc,YACjCE,eAAgBH,SAASC,cAAc,qBACvCG,aAAcJ,SAASC,cAAc,UACrCI,QAASL,SAASC,cAAc,iBAChCK,WAAYN,SAASC,cAAc,qBACnCM,UAAWP,SAASQ,eAAe,cACnCC,iBAAkBT,SAASC,cAAc,iBACzCS,KAAMV,SAASC,cAAc,sBAC7BU,yBAA0BX,SAASC,cAAc,kBACjDW,iBAAkBZ,SAASC,cAAc,UACzCY,iBAAkBb,SAASC,cAAc,aACzCa,gBAAiBd,SAASC,cAAc,mBACxCc,qBAAsBf,SAASC,cAAc,yBAC7Ce,cAAehB,SAASC,cAAc,qBACtCgB,mBAAoBjB,SAASC,cAAc,uBAC3CiB,gBAAiBlB,SAASC,cAAc,wBACxCkB,SAAUnB,SAASC,cAAc,aACjCmB,KAAMpB,SAASC,cAAc,QAC7BoB,iBAAkB,G,8SCpBpB,IAAAC,EAAAC,EAAA,S,aAIO,SAASC,EAAkBC,GAChCA,EACGC,KAAI,EAACC,YAAEA,EAAWC,UAAEA,EAASC,MAAEA,EAAKC,aAAEA,EAAYC,GAAEA,KAI5C,mCAAmCA,GAAM,uHAHjCJ,EACX,kCAAkCA,IAClC,0EAIFE,GAAS,iCACYE,kFAEwBA,oDACNA,KAAMF,GAAS,iEACdE,0DACKA,KAC7CC,EAAUJ,EAAW,IAAM,4EAEeG,gEACCA,KAC3C,IAAIE,KAAKH,GAAcI,eAAiB,0FAM3CC,SAAQC,GAAKd,EAAAe,KAAKhC,QAAQiC,mBAAmB,YAAaF,I,CAExD,SAASJ,EAAUJ,EAAWW,GACnC,MAAMC,EAASC,KAAKC,MAAMC,aAAaC,QAAQ,WACzCC,EAAY,GAElB,IACE,IAAIC,EAAa,EACjBA,EAAaP,GAAkBO,EAAalB,EAAUmB,OACtDD,IAEA,IAAK,MAAME,KAASR,EACdZ,EAAUkB,KAAgBE,EAAMjB,IAClCc,EAAUI,KAAKD,EAAME,MAO3B,OAHItB,EAAUmB,OAASR,GACrBM,EAAUM,OAAOZ,EAAiB,EAAG,EAAG,SAEnCM,EAAUO,KAAK,K,CAGjB,SAASC,EAAmB5B,GAEjC,IADA,EAAA6B,EAAAC,aACI9B,EACF,OAAKA,EAAMsB,YAIXtB,EACGC,KAAI,EAACC,YAAEA,EAAWC,UAAEA,EAASC,MAAEA,EAAKC,aAAEA,EAAYC,GAAEA,KAI5C,8BAA8BA,GAAM,uHAH5BJ,EACX,kCAAkCA,IAClC,0EAIFE,GAAS,iCACYE,kFAEsBA,oDACNA,KAAMF,GAAS,iEACdE,0DACKA,KAC3CC,EAAUJ,EAAW,IAAM,4EAEaG,gEACCA,KACzC,IAAIE,KAAKH,GAAcI,eAAiB,0FAM3CC,SAAQC,GAAKd,EAAAe,KAAK/B,WAAWgC,mBAAmB,YAAaF,UA5B9DoB,IA+BJA,G,CAGK,SAASA,IACIxD,SAASQ,eAAe,QAChCiD,UAAUC,OAAO,kB,CAEtB,SAASC,IACI3D,SAASQ,eAAe,QAChCiD,UAAUG,IAAI,kB,uFCjG1B,IAAAtC,EAAAC,EAAA,SAkBO,SAASsC,IACdvC,EAAAe,KAAKlB,SAAS2C,QAAUrB,KAAKC,MAAMC,aAAaC,QAAQ,eACpDtB,EAAAe,KAAKlB,SAAS2C,UAChBxC,EAAAe,KAAKjB,KAAK2C,MAAMC,gBAAkB,UAClC1C,EAAAe,KAAKzB,iBAAiBmD,MAAMC,gBAAkB,WAE3C1C,EAAAe,KAAKlB,SAAS2C,UACjBxC,EAAAe,KAAKjB,KAAK2C,MAAMC,gBAAkB,OAClC1C,EAAAe,KAAKzB,iBAAiBmD,MAAMC,gBAAkB,O,CArBlD1C,EAAAe,KAAKlB,SAAS8C,iBAAiB,SAE/B,WACEtB,aAAauB,QAAQ,aAAczB,KAAK0B,UAAU7C,EAAAe,KAAKlB,SAAS2C,UAC5DxC,EAAAe,KAAKlB,SAAS2C,UAChBxC,EAAAe,KAAKjB,KAAK2C,MAAMC,gBAAkB,UAClC1C,EAAAe,KAAKzB,iBAAiBmD,MAAMC,gBAAkB,WAE3C1C,EAAAe,KAAKlB,SAAS2C,UACjBxC,EAAAe,KAAKjB,KAAK2C,MAAMC,gBAAkB,OAClC1C,EAAAe,KAAKzB,iBAAiBmD,MAAMC,gBAAkB,O,uFCfnC,MAAMI,EAOnBC,cACM1B,aAAaC,QAAQ,mBACvB0B,KAAKC,kBAAoB9B,KAAKC,MAC5BC,aAAaC,QAAQ,kB,CAM3B4B,mBACM7B,aAAaC,QAAQ,iBACvB0B,KAAKG,gBAAkBhC,KAAKC,MAAMC,aAAaC,QAAQ,gB,CAK3D8B,kBAAkBC,GACZhC,aAAaC,QAAQ,mBACvB0B,KAAKC,kBAAoB9B,KAAKC,MAC5BC,aAAaC,QAAQ,mBAGzB0B,KAAKC,kBAAkBtB,KAAK0B,GAC5BL,KAAKM,kB,CAGPC,kBAAkBC,GACZnC,aAAaC,QAAQ,iBACvB0B,KAAKG,gBAAkBhC,KAAKC,MAAMC,aAAaC,QAAQ,iBAGzD0B,KAAKG,gBAAgBxB,KAAK6B,GAC1BnC,aAAauB,QAAQ,cAAezB,KAAK0B,UAAUG,KAAKG,iB,CAG1DM,gBAAgBJ,GACVhC,aAAaC,QAAQ,iBACvB0B,KAAKG,gBAAkBhC,KAAKC,MAAMC,aAAaC,QAAQ,iBAEzD0B,KAAKG,gBAAgBxB,KAAK0B,GAC1BL,KAAKU,gB,CAGPJ,mBACEjC,aAAauB,QACX,gBACAzB,KAAK0B,UAAUG,KAAKC,mB,CAIxBS,iBACErC,aAAauB,QAAQ,cAAezB,KAAK0B,UAAUG,KAAKG,iB,CAG1DQ,qBACE,GAAKtC,aAAaC,QAAQ,iBAI1B,OAAOH,KAAKC,MAAMC,aAAaC,QAAQ,iB,CAEzCsC,oBACE,GAAKvC,aAAaC,QAAQ,eAI1B,OAAOH,KAAKC,MAAMC,aAAaC,QAAQ,e,CAEzCuC,kBAAkBL,GAChB,IAAKnC,aAAaC,QAAQ,iBACxB,OAEF0B,KAAKC,kBAAoB9B,KAAKC,MAAMC,aAAaC,QAAQ,kBACzD,MAAMwC,EAAQd,KAAKC,kBAAkBc,WACnCC,GAAUA,EAAOzD,QAAUiD,EAAKjD,QAElCyC,KAAKC,kBAAkBpB,OAAOiC,EAAO,GACrCd,KAAKM,kB,CAEPW,gBAAgBT,GACd,IAAKnC,aAAaC,QAAQ,eACxB,OAEF0B,KAAKG,gBAAkBhC,KAAKC,MAAMC,aAAaC,QAAQ,gBACvD,MAAMwC,EAAQd,KAAKG,gBAAgBY,WACjCC,GAAUA,EAAOzD,QAAUiD,EAAKjD,QAElCyC,KAAKG,gBAAgBtB,OAAOiC,EAAO,GACnCd,KAAKU,gB,CAGPQ,0BAA0BV,GACxB,IAAKnC,aAAaC,QAAQ,iBACxB,OAEF0B,KAAKC,kBAAoB9B,KAAKC,MAAMC,aAAaC,QAAQ,kBAIzD,QAHe0B,KAAKC,kBAAkBkB,MACpCH,GAAUA,EAAOzD,QAAUiD,EAAKjD,O,CAQpC6D,wBAAwBZ,GACtB,IAAKnC,aAAaC,QAAQ,eACxB,OAEF0B,KAAKG,gBAAkBhC,KAAKC,MAAMC,aAAaC,QAAQ,gBAIvD,QAHe0B,KAAKG,gBAAgBgB,MAClCH,GAAUA,EAAOzD,QAAUiD,EAAKjD,O,CArHpC8D,cACErB,KAAKC,kBAAoB,GACzBD,KAAKG,gBAAkB,GACvBH,KAAKD,cACLC,KAAKE,kB,gGCLT,IAAAlD,EAAAC,EAAA,SAEIqE,EAAM5F,SAAS6F,cAAc,UACjCD,EAAIE,IAAM,qCACV,IAAIC,EAAiB/F,SAASgG,qBAAqB,UAAU,GAG7D,IAAIC,EAiBGC,eAAeC,IACpB,MAAMpE,EAAK/B,SAASC,cAAc,iBAAiB8B,GAC7CqE,QAjBRF,eAA2BnE,GAEzB,IACE,MAAMsE,QAAiBC,MACrB,sCAAsCvE,oEAExC,GAAIsE,EAASE,GACX,aAAaF,EAASG,M,CAExB,MAAOC,GACPC,QAAQC,IAAI,Q,EAOYC,CAAY7E,GAGtC,GAFAT,EAAAe,KAAKnB,gBAAgBuC,UAAUC,OAAO,aAEH,IAA/B0C,EAAYS,QAAQ9D,OAGtB,YAFA2D,QAAQC,IAAI,qDAKd,IAAIG,EAAcV,EAAYS,QAAQpB,MACpCd,GAAsB,YAAdA,EAAKoC,MAAoC,YAAdpC,EAAKqC,OAE1C,IAAiCC,IAgBTH,EAAYI,IAflCjB,EAAS,IAAIkB,GAAGC,OAAO,SAAU,CAC/BC,OAAQ,MACRC,MAAO,MACPC,QAASN,EACTO,WAAY,CACVC,SAAU,EACVC,SAAU,EACVC,IAAK,GAEPC,OAAQ,CACNC,QAASC,EACTC,cAAeC,I,CAiBvB,SAASF,EAAcG,GACrBA,EAAMC,OAAOC,W,CAGf,SAASH,EAAoBC,GAAO,CAEpC,SAASG,IACPnC,EAAOoC,W,CArETtC,EAAeuC,WAAWC,aAAa3C,EAAKG,GAoD5CzE,EAAAe,KAAKnB,gBAAgB+C,iBAAiB,SAASuE,IAC7CA,EAAEC,cAAchF,UAAUiF,OAAO,aACjCpH,EAAAe,KAAKnB,gBAAgByH,UAAY,GACjCrH,EAAAe,KAAKnB,gBAAgByH,UACnB,iDACFP,GAAW,G,sCC9Db,MAAMQ,EAAO,CACXC,MAAO7I,SAASC,cAAc,uBAC9B6I,SAAU9I,SAASC,cAAc,2BACjC8I,mBAAoB/I,SAASC,cAAc,aAe7C,SAAS+I,EAAcf,GACF,WAAfA,EAAMgB,OACRL,EAAKC,MAAMpF,UAAUG,IAAI,aACzB5D,SAASkJ,oBAAoB,UAAWF,GACxChJ,SAASkJ,oBAAoB,QAASC,G,CAG1C,SAASA,EAAgBlB,GACnBA,EAAMC,SAAWU,EAAKC,QACxBD,EAAKC,MAAMpF,UAAUG,IAAI,aACzB5D,SAASkJ,oBAAoB,QAASC,GACtCnJ,SAASkJ,oBAAoB,UAAWF,G,CAvB5CJ,EAAKG,mBAAmB9E,iBAAiB,SAASuE,IAChDA,EAAEY,iBACFR,EAAKC,MAAMpF,UAAUC,OAAO,aAC5B1D,SAASiE,iBAAiB,UAAW+E,GACrChJ,SAASiE,iBAAiB,QAASkF,EAAgB,IAErDP,EAAKE,SAAS7E,iBAAiB,SAASuE,IACtCA,EAAEY,iBACFR,EAAKC,MAAMpF,UAAUG,IAAI,aACzB5D,SAASkJ,oBAAoB,UAAWF,GACxChJ,SAASkJ,oBAAoB,QAASC,EAAgB,G","sources":["src/js/refs.js","src/js/renderMarkup.js","src/js/theme.js","src/js/watched-queue.js","src/js/trailers.js","src/js/onClickBtnActions.js"],"sourcesContent":["const refs = {\n  backdrop: document.querySelector('.backdrop'),\n  teamLink: document.querySelector('.js-team'),\n  spinerBackdrop: document.querySelector('.spiner__backdrop'),\n  filmsListRef: document.querySelector('.films'),\n  gallery: document.querySelector('.gallery__set'),\n  libGallery: document.querySelector('.lib-gallery__set'),\n  container: document.getElementById('pagination'),\n  galleryGenreItem: document.querySelector('.film__genres'),\n  form: document.querySelector('.header-film__form'),\n  closeModalBtnForOneMovie: document.querySelector('.modal__button'),\n  modalForOneMovie: document.querySelector('.modal'),\n  backdropOneMovie: document.querySelector('.backdrop'),\n  btnAddToWatched: document.querySelector('.btn__modal-add'),\n  btnRemoveFromWatched: document.querySelector('.btn__modal-r-watched'),\n  btnAddToQuene: document.querySelector('.btn__modal-queue'),\n  btnRemoveFromQuene: document.querySelector('.btn__modal-r-queue'),\n  trailerBackdrop: document.querySelector('.js-backdrop-trailer'),\n  checkBox: document.querySelector('.checkbox'),\n  main: document.querySelector('main'),\n  globalInputValue: '',\n};\n\nexport { refs };\n","import { refs } from './refs';\nimport { loadTheme } from './theme';\n\n// функция отрисовки топ фильмов\nexport function renderFilmsMarkup(films) {\n  films\n    .map(({ poster_path, genre_ids, title, release_date, id }) => {\n      const poster = poster_path\n        ? `https://image.tmdb.org/t/p/w400${poster_path}`\n        : `https://image.tmdb.org/t/p/w400/yEvumAoCB9Z7o9dAzjxrjcwo2FQ.jpg`;\n      return `<li class=\"films__item\" data-id=${id || `No ID`}>\n                <div class=\"films__img\">\n                    <img src=https://image.tmdb.org/t/p/original${poster} alt=\"${\n        title || 'No title'\n      }\" loading=\"lazy\" id=${id}>\n                </div>\n                <div class=\"films__description\" id=${id}>\n                  <p class=\"films__title\" id=${id}>${title || 'No title'}</p>\n                  <div class=\"films__meta\" id=${id}>\n                    <span class=\"films__genres\" id=${id}>${\n        getGenres(genre_ids, 3) || 'No genres info'\n      }</span>\n                    <span class=\"films__sep\" id=${id}>|</span>\n                    <span class=\"films__data\" id=${id}>${\n        new Date(release_date).getFullYear() || 'No info'\n      }</span>\n                  </div>\n                </div>\n            </li>`;\n    })\n    .forEach(c => refs.gallery.insertAdjacentHTML('beforeend', c));\n}\nexport function getGenres(genre_ids, maxGenresShown) {\n  const genres = JSON.parse(localStorage.getItem('genres'));\n  const genresArr = [];\n\n  for (\n    let genreIndex = 0;\n    genreIndex < maxGenresShown && genreIndex < genre_ids.length;\n    genreIndex++\n  ) {\n    for (const value of genres) {\n      if (genre_ids[genreIndex] === value.id) {\n        genresArr.push(value.name);\n      }\n    }\n  }\n  if (genre_ids.length > maxGenresShown) {\n    genresArr.splice(maxGenresShown - 1, 1, 'Other');\n  }\n  return genresArr.join(', ');\n}\n\nexport function renderFilmsLibrary(films) {\n  loadTheme();\n  if (films) {\n    if (!films.length) {\n      setImgInLib();\n      return;\n    }\n    films\n      .map(({ poster_path, genre_ids, title, release_date, id }) => {\n        const poster = poster_path\n          ? `https://image.tmdb.org/t/p/w400${poster_path}`\n          : `https://image.tmdb.org/t/p/w400/yEvumAoCB9Z7o9dAzjxrjcwo2FQ.jpg`;\n        return `<li class=\"films__item\" id=${id || `No ID`}>\n                <div class=\"films__img\">\n                    <img src=https://image.tmdb.org/t/p/original${poster} alt=\"${\n          title || 'No title'\n        }\" loading=\"lazy\" id=${id}>\n                </div>\n                <div class=\"films__description\" id=${id}>\n                  <p class=\"films__title\" id=${id}>${title || 'No title'}</p>\n                  <div class=\"films__meta\" id=${id}>\n                    <span class=\"films__genres\" id=${id}>${\n          getGenres(genre_ids, 3) || 'No genres info'\n        }</span>\n                    <span class=\"films__sep\" id=${id}>|</span>\n                    <span class=\"films__data\" id=${id}>${\n          new Date(release_date).getFullYear() || 'No info'\n        }</span>\n                  </div>\n                </div>\n            </li>`;\n      })\n      .forEach(c => refs.libGallery.insertAdjacentHTML('beforeend', c));\n    return;\n  }\n  setImgInLib();\n}\n\nexport function setImgInLib() {\n  const imagePlug = document.getElementById('plug');\n  imagePlug.classList.remove('visually-hidden');\n}\nexport function removeImgInLib() {\n  const imagePlug = document.getElementById('plug');\n  imagePlug.classList.add('visually-hidden');\n}\n\n// функция отрисовки жанров\n\n// export function renderGenres(renderGenresFilms) {\n//   let genreString;\n//   renderGenresFilms.map(film => {\n//     const filmGenres = film.genre_ids;\n//     let array = [];\n\n//     //console.log('filmGenres', filmGenres);\n//     filmGenres.map(genre => {\n//       const filmGenre = localStorage.getItem(genre);\n//       array.push(filmGenre);\n//       genreString = array.join(', ');\n//     });\n//   });\n//   //refs.galleryGenreItem.textContent = 777;\n//   return genreString;\n// }\n\n// // Функция записи жанров в локалсторедж\n// export async function getGenres() {\n//   const trendingMovies = new TrendingMovies();\n//   try {\n//     const result = await trendingMovies.fetchGenresIds();\n//     for (const genre of result) {\n//       localStorage.setItem(`${genre.id}`, `${genre.name}`);\n//     }\n//   } catch (error) {\n//     console.log(error);\n//   }\n// }\n// lib-gallery-render-func\n","import { refs } from './refs';\n\n// const checkBox = document.querySelector('.checkbox');\n// console.log(checkBox);\n\nrefs.checkBox.addEventListener('click', saveTheme);\n\nfunction saveTheme() {\n  localStorage.setItem('dark-theme', JSON.stringify(refs.checkBox.checked));\n  if (refs.checkBox.checked) {\n    refs.main.style.backgroundColor = '#272e34';\n    refs.modalForOneMovie.style.backgroundColor = '#272e34';\n  }\n  if (!refs.checkBox.checked) {\n    refs.main.style.backgroundColor = '#fff';\n    refs.modalForOneMovie.style.backgroundColor = '#fff';\n  }\n}\nexport function loadTheme() {\n  refs.checkBox.checked = JSON.parse(localStorage.getItem('dark-theme'));\n  if (refs.checkBox.checked) {\n    refs.main.style.backgroundColor = '#272e34';\n    refs.modalForOneMovie.style.backgroundColor = '#272e34';\n  }\n  if (!refs.checkBox.checked) {\n    refs.main.style.backgroundColor = '#fff';\n    refs.modalForOneMovie.style.backgroundColor = '#fff';\n  }\n}\n","export default class FilmsStorage {\n  constructor() {\n    this._watchedFilmsList = [];\n    this._queueFilmsList = [];\n    this.refreshData();\n    this.refreshDataQueue();\n  }\n  refreshData() {\n    if (localStorage.getItem('watched-films')) {\n      this._watchedFilmsList = JSON.parse(\n        localStorage.getItem('watched-films')\n      );\n    }\n    //console.log('пусто');\n  }\n\n  refreshDataQueue() {\n    if (localStorage.getItem('queue-films')) {\n      this._queueFilmsList = JSON.parse(localStorage.getItem('queue-films'));\n    }\n    return;\n  }\n\n  addToWatchedFilms(item) {\n    if (localStorage.getItem('watched-films')) {\n      this._watchedFilmsList = JSON.parse(\n        localStorage.getItem('watched-films')\n      );\n    }\n    this._watchedFilmsList.push(item);\n    this.saveWatchedFilms();\n  }\n\n  myAddToQueueFilms(film) {\n    if (localStorage.getItem('queue-films')) {\n      this._queueFilmsList = JSON.parse(localStorage.getItem('queue-films'));\n    }\n\n    this._queueFilmsList.push(film);\n    localStorage.setItem('queue-films', JSON.stringify(this._queueFilmsList));\n  }\n\n  addToQueueFilms(item) {\n    if (localStorage.getItem('queue-films')) {\n      this._queueFilmsList = JSON.parse(localStorage.getItem('queue-films'));\n    }\n    this._queueFilmsList.push(item);\n    this.saveQueueFilms();\n  }\n\n  saveWatchedFilms() {\n    localStorage.setItem(\n      'watched-films',\n      JSON.stringify(this._watchedFilmsList)\n    );\n  }\n\n  saveQueueFilms() {\n    localStorage.setItem('queue-films', JSON.stringify(this._queueFilmsList));\n  }\n\n  getWathedFilmsList() {\n    if (!localStorage.getItem('watched-films')) {\n      return;\n    }\n    // this._watchedFilmsList = JSON.parse(localStorage.getItem('watched-films'));\n    return JSON.parse(localStorage.getItem('watched-films'));\n  }\n  getQueueFilmsList() {\n    if (!localStorage.getItem('queue-films')) {\n      return;\n    }\n    // this._queueFilmsList = JSON.parse(localStorage.getItem('queue-films'));\n    return JSON.parse(localStorage.getItem('queue-films'));\n  }\n  removeFromWatched(film) {\n    if (!localStorage.getItem('watched-films')) {\n      return;\n    }\n    this._watchedFilmsList = JSON.parse(localStorage.getItem('watched-films'));\n    const index = this._watchedFilmsList.findIndex(\n      option => option.title === film.title\n    );\n    this._watchedFilmsList.splice(index, 1);\n    this.saveWatchedFilms();\n  }\n  removeFromQueue(film) {\n    if (!localStorage.getItem('queue-films')) {\n      return;\n    }\n    this._queueFilmsList = JSON.parse(localStorage.getItem('queue-films'));\n    const index = this._queueFilmsList.findIndex(\n      option => option.title === film.title\n    );\n    this._queueFilmsList.splice(index, 1);\n    this.saveQueueFilms();\n  }\n\n  checkFilmInWatchedLocStor(film) {\n    if (!localStorage.getItem('watched-films')) {\n      return;\n    }\n    this._watchedFilmsList = JSON.parse(localStorage.getItem('watched-films'));\n    const answer = this._watchedFilmsList.find(\n      option => option.title === film.title\n    );\n    if (answer) {\n      return true;\n    }\n    return false;\n  }\n\n  checkFilmInQueueLocStor(film) {\n    if (!localStorage.getItem('queue-films')) {\n      return;\n    }\n    this._queueFilmsList = JSON.parse(localStorage.getItem('queue-films'));\n    const answer = this._queueFilmsList.find(\n      option => option.title === film.title\n    );\n    if (answer) {\n      return true;\n    }\n    return false;\n  }\n}\n\n//const storage = new FilmsStorage();\n\n//const addToWatchedBtn = document.querySelector('.btn__modal-add');\n\n//addToWatchedBtn.addEventListener('click', addToLS);\n\n//function addToLS() {\n//  console.log(1);\n//}\n","import { refs } from './refs';\n\nvar tag = document.createElement('script');\ntag.src = 'https://www.youtube.com/iframe_api';\nvar firstScriptTag = document.getElementsByTagName('script')[0];\nfirstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n\nlet player;\n\nasync function getTrailers(id) {\n  const apiKey = `5d44c33850258a6ea050e461474b1468`;\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${id}/videos?api_key=${apiKey}&language=en-US`\n    );\n    if (response.ok) {\n      return await response.json();\n    }\n  } catch (error) {\n    console.log('error');\n  }\n  //throw new Error('Ошибка! Нет трейлера к этому фильму!');\n}\n\nexport async function createTrailerLink() {\n  const id = document.querySelector('.play-trailer').id;\n  const fetchResult = await getTrailers(id);\n  refs.trailerBackdrop.classList.remove('is-hidden');\n\n  if (fetchResult.results.length === 0) {\n    console.log('Нет в БД трейлера к этому фильму. Нам очень жаль.');\n\n    return;\n  }\n\n  let resultArray = fetchResult.results.find(\n    item => item.type === 'Trailer' && item.site === 'YouTube'\n  );\n  function onYouTubeIframeAPIReady(videoIdKey) {\n    player = new YT.Player('player', {\n      height: '360',\n      width: '640',\n      videoId: videoIdKey,\n      playerVars: {\n        autoplay: 1,\n        controls: 1,\n        rel: 0,\n      },\n      events: {\n        onReady: onPlayerReady,\n        onStateChange: onPlayerStateChange,\n      },\n    });\n  }\n  onYouTubeIframeAPIReady(resultArray.key);\n}\n\nrefs.trailerBackdrop.addEventListener('click', e => {\n  e.currentTarget.classList.toggle('is-hidden');\n  refs.trailerBackdrop.innerHTML = '';\n  refs.trailerBackdrop.innerHTML =\n    '<div class=\"modal__trailer\" id=\"player\"></div>';\n  stopVideo();\n});\n\n//refs.trailerBackdrop.addEventListener('keydown', onEscapeClickTrailer);\n\nfunction onPlayerReady(event) {\n  event.target.playVideo();\n}\n\nfunction onPlayerStateChange(event) {}\n\nfunction stopVideo() {\n  player.stopVideo();\n}\n\nfunction onEscapeClickTrailer(event) {\n  event.stopImmediatePropagation();\n  if (event.code == 'Escape') {\n    refs.trailerBackdrop.classList.toggle('is-hidden');\n    refs.trailerBackdrop.innerHTML = '';\n    refs.trailerBackdrop.innerHTML =\n      '<div class=\"modal__trailer\" id=\"player\"></div>';\n    stopVideo();\n  }\n}\n","const refs = {\n  modal: document.querySelector('[data-modal-footer]'),\n  closeBtn: document.querySelector('.footer-modal__closeBtn'),\n  openFooterModalBtn: document.querySelector('.js-team'),\n};\n\nrefs.openFooterModalBtn.addEventListener('click', e => {\n  e.preventDefault();\n  refs.modal.classList.remove('is-hidden');\n  document.addEventListener('keydown', onEscapeClick);\n  document.addEventListener('click', onBackdropClick);\n});\nrefs.closeBtn.addEventListener('click', e => {\n  e.preventDefault();\n  refs.modal.classList.add('is-hidden');\n  document.removeEventListener('keydown', onEscapeClick);\n  document.removeEventListener('click', onBackdropClick);\n});\nfunction onEscapeClick(event) {\n  if (event.code === 'Escape') {\n    refs.modal.classList.add('is-hidden');\n    document.removeEventListener('keydown', onEscapeClick);\n    document.removeEventListener('click', onBackdropClick);\n  }\n}\nfunction onBackdropClick(event) {\n  if (event.target === refs.modal) {\n    refs.modal.classList.add('is-hidden');\n    document.removeEventListener('click', onBackdropClick);\n    document.removeEventListener('keydown', onEscapeClick);\n  }\n}"],"names":["$ee27a4d7c64fc8c4$export$21666b427502ea6d","backdrop","document","querySelector","teamLink","spinerBackdrop","filmsListRef","gallery","libGallery","container","getElementById","galleryGenreItem","form","closeModalBtnForOneMovie","modalForOneMovie","backdropOneMovie","btnAddToWatched","btnRemoveFromWatched","btnAddToQuene","btnRemoveFromQuene","trailerBackdrop","checkBox","main","globalInputValue","$krGWQ","parcelRequire","$8fa1c37b43059e2f$export$102bb08495704bf","films","map","poster_path","genre_ids","title","release_date","id","$8fa1c37b43059e2f$export$c5604fa8028da00","Date","getFullYear","forEach","c","refs","insertAdjacentHTML","maxGenresShown","genres","JSON","parse","localStorage","getItem","genresArr","genreIndex","length","value","push","name","splice","join","$8fa1c37b43059e2f$export$1385a8623dbdd01b","$4S0r6","loadTheme","$8fa1c37b43059e2f$export$22e832d66312f05f","classList","remove","$8fa1c37b43059e2f$export$d3cfb0b3bbe644b","add","$38bc8b2c82e947f6$export$a1d87755f3c9500d","checked","style","backgroundColor","addEventListener","setItem","stringify","$e0083d86594315ee$export$2e2bcd8739ae039","refreshData","this","_watchedFilmsList","refreshDataQueue","_queueFilmsList","addToWatchedFilms","item","saveWatchedFilms","myAddToQueueFilms","film","addToQueueFilms","saveQueueFilms","getWathedFilmsList","getQueueFilmsList","removeFromWatched","index","findIndex","option","removeFromQueue","checkFilmInWatchedLocStor","find","checkFilmInQueueLocStor","constructor","$ff26e1a57d3db400$var$tag","createElement","src","$ff26e1a57d3db400$var$firstScriptTag","getElementsByTagName","$ff26e1a57d3db400$var$player","async","$ff26e1a57d3db400$export$3220d1ba4c0e4520","fetchResult","response","fetch","ok","json","error","console","log","$ff26e1a57d3db400$var$getTrailers","results","resultArray","type","site","videoIdKey","key","YT","Player","height","width","videoId","playerVars","autoplay","controls","rel","events","onReady","$ff26e1a57d3db400$var$onPlayerReady","onStateChange","$ff26e1a57d3db400$var$onPlayerStateChange","event","target","playVideo","$ff26e1a57d3db400$var$stopVideo","stopVideo","parentNode","insertBefore","e","currentTarget","toggle","innerHTML","$823259d89a4bbb6b$var$refs","modal","closeBtn","openFooterModalBtn","$823259d89a4bbb6b$var$onEscapeClick","code","removeEventListener","$823259d89a4bbb6b$var$onBackdropClick","preventDefault"],"version":3,"file":"index.e0463f28.js.map"}