{"mappings":"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","sources":["src/js/refs.js","src/js/voprim.js","src/library.js","src/js/watched-queue.js"],"sourcesContent":["const refs = {\n  backdrop: document.querySelector('.backdrop'),\n  teamLink: document.querySelector('.js-team'),\n  spinerBackdrop: document.querySelector('.spiner__backdrop'),\n  filmsListRef: document.querySelector('.films'),\n  gallery: document.querySelector('.gallery__set'),\n  libGallery: document.querySelector('.lib-gallery__set'),\n  container: document.getElementById('pagination'),\n  galleryGenreItem: document.querySelector('.film__genres'),\n  form: document.querySelector('.header-film__form'),\n  closeModalBtnForOneMovie: document.querySelector('.modal__button'),\n  modalForOneMovie: document.querySelector('.modal'),\n  backdropOneMovie: document.querySelector('.backdrop'),\n  btnAddToWatched: document.querySelector('.btn__modal-add'),\n  btnRemoveFromWatched: document.querySelector('.btn__modal-r-watched'),\n  btnAddToQuene: document.querySelector('.btn__modal-queue'),\n  btnRemoveFromQuene: document.querySelector('.btn__modal-r-queue'),\n};\n\nexport { refs };\n","import { refs } from './refs';\n// import TrendingMovies from './MykolaPom';\n\n// функция отрисовки топ фильмов\nexport function renderFilmsMarkup(films) {\n  films\n    .map(({ poster_path, genre_ids, title, release_date, id }) => {\n      const poster = poster_path\n        ? `https://image.tmdb.org/t/p/w500${poster_path}`\n        : `https://image.tmdb.org/t/p/w500/yEvumAoCB9Z7o9dAzjxrjcwo2FQ.jpg`;\n      return `<li class=\"films__item\" data-id=${id || `No ID`}>\n                <div class=\"films__img\">\n                    <img src=https://image.tmdb.org/t/p/original${poster} alt=\"${\n        title || 'No title'\n      }\" loading=\"lazy\">\n                </div>\n                <div class=\"films__description\">\n                  <p class=\"films__title\">${title || 'No title'}</p>\n                  <div class=\"films__meta\">\n                    <span class=\"films__genres\">${\n                      getGenres(genre_ids, 3) || 'No genres info'\n                    }</span>\n                    <span class=\"films__sep\">|</span>\n                    <span class=\"films__data\">${\n                      new Date(release_date).getFullYear() || 'No info'\n                    }</span>\n                  </div>\n                </div>\n            </li>`;\n    })\n    .forEach(c => refs.gallery.insertAdjacentHTML('beforeend', c));\n}\nexport function getGenres(genre_ids, maxGenresShown) {\n  const genres = JSON.parse(localStorage.getItem('genres'));\n  const genresArr = [];\n\n  for (\n    let genreIndex = 0;\n    genreIndex < maxGenresShown && genreIndex < genre_ids.length;\n    genreIndex++\n  ) {\n    for (const value of genres) {\n      if (genre_ids[genreIndex] === value.id) {\n        genresArr.push(value.name);\n      }\n    }\n  }\n  if (genresArr.length === 0) {\n    return 'No genres info';\n  }\n  if (genre_ids.length > maxGenresShown) {\n    genresArr.push('Other');\n  }\n\n  return genresArr.join(', ');\n}\n\nexport function renderFilmsLibrary(films) {\n  films\n    .map(({ poster_path, genre_ids, title, release_date, id }) => {\n      const poster = poster_path\n        ? `https://image.tmdb.org/t/p/w500${poster_path}`\n        : `https://image.tmdb.org/t/p/w500/yEvumAoCB9Z7o9dAzjxrjcwo2FQ.jpg`;\n      return `<li class=\"films__item\" data-id=${id || `No ID`}>\n                <div class=\"films__img\">\n                    <img src=https://image.tmdb.org/t/p/original${poster} alt=\"${\n        title || 'No title'\n      }\" loading=\"lazy\">\n                </div>\n                <div class=\"films__description\">\n                  <p class=\"films__title\">${title || 'No title'}</p>\n                  <div class=\"films__meta\">\n                    <span class=\"films__genres\">${\n                      getGenres(genre_ids, 3) || 'No genres info'\n                    }</span>\n                    <span class=\"films__sep\">|</span>\n                    <span class=\"films__data\">${\n                      new Date(release_date).getFullYear() || 'No info'\n                    }</span>\n                  </div>\n                </div>\n            </li>`;\n    })\n    .forEach(c => refs.libGallery.insertAdjacentHTML('beforeend', c));\n}\n\n// функция отрисовки жанров\n\n// export function renderGenres(renderGenresFilms) {\n//   let genreString;\n//   renderGenresFilms.map(film => {\n//     const filmGenres = film.genre_ids;\n//     let array = [];\n\n//     //console.log('filmGenres', filmGenres);\n//     filmGenres.map(genre => {\n//       const filmGenre = localStorage.getItem(genre);\n//       array.push(filmGenre);\n//       genreString = array.join(', ');\n//     });\n//   });\n//   //refs.galleryGenreItem.textContent = 777;\n//   return genreString;\n// }\n\n// // Функция записи жанров в локалсторедж\n// export async function getGenres() {\n//   const trendingMovies = new TrendingMovies();\n//   try {\n//     const result = await trendingMovies.fetchGenresIds();\n//     for (const genre of result) {\n//       localStorage.setItem(`${genre.id}`, `${genre.name}`);\n//     }\n//   } catch (error) {\n//     console.log(error);\n//   }\n// }\n// lib-gallery-render-func\n","// Федір, твори магію)\nimport { refs } from './js/refs';\nimport { renderFilmsLibrary } from './js/voprim';\nimport FilmsStorage from './js/watched-queue';\n// import { spinerClose, spinerOpen } from './js/spiner';\nimport { getGenres } from './js/voprim';\n\nconst storage = new FilmsStorage();\nconst movieDescription = document.querySelector('.modal__wrap');\nrefs.closeModalBtnForOneMovie.addEventListener('click', onCloseModal);\nrefs.libGallery.addEventListener('click', onOpenModal);\n//\nlet addToWatchedBtn;\n\nlet addToQueueBtn;\nlet removeFromWatchedBtn;\nlet removeFromQueueBtn;\nlet currentFilm = {};\n//\n// spinerClose();\nrenderFilmsLibrary(storage.getWathedFilmsList());\n\nconst queueBtn = document.querySelector('.queue-button');\nconst wachedBtn = document.querySelector('.watched-button');\n\nqueueBtn.addEventListener('click', onQueueBtnClick);\nwachedBtn.addEventListener('click', onWachedBtnClick);\n\nfunction onQueueBtnClick() {\n  refs.libGallery.innerHTML = '';\n  renderFilmsLibrary(storage.getQueueFilmsList());\n\n  wachedBtn.style.backgroundColor = 'transparent';\n  wachedBtn.style.border = '1px solid white';\n}\nfunction onWachedBtnClick() {\n  refs.libGallery.innerHTML = '';\n  renderFilmsLibrary(storage.getWathedFilmsList());\n\n  wachedBtn.style.backgroundColor = '#ff6b08';\n  wachedBtn.style.border = 'none';\n}\n\nfunction onEscapeClick(event) {\n  if (event.code == 'Escape') {\n    refs.backdropOneMovie.classList.add('is-hidden');\n    document.body.classList.remove('modal-open');\n  }\n}\n\nfunction onBackdropClick(event) {\n  if (event.target == refs.backdropOneMovie) {\n    refs.backdropOneMovie.classList.add('is-hidden');\n    document.body.classList.remove('modal-open');\n  }\n}\n\n// findFilmFunc\nfunction findCurrentFilm(name) {\n  const filmsSet = getMoviesToLocalhost();\n  currentFilm = filmsSet.find(option => option.original_title === name);\n  return currentFilm;\n}\n// missclick\nfunction checkClick(e) {\n  const element = e.target.nodeName;\n  if (\n    element === 'DIV' ||\n    element === 'IMG' ||\n    element === 'P' ||\n    element === 'SPAN'\n  ) {\n    return true;\n  }\n  return false;\n}\n\nfunction onOpenModal(e) {\n  if (!checkClick(e)) {\n    return;\n  }\n\n  refs.backdropOneMovie.classList.remove('is-hidden');\n  document.body.classList.add('modal-open');\n\n  const nameFilm = e.target.alt;\n  const curentObject = findCurrentFilm(nameFilm);\n\n  renderOneMovieForModal(curentObject);\n\n  //\n\n  addToWatchedBtn = document.querySelector('.btn__modal-add');\n\n  addToQueueBtn = document.querySelector('.btn__modal-queue');\n  removeFromQueueBtn = document.querySelector('.btn__modal-r-queue');\n\n  removeFromWatchedBtn = document.querySelector('.btn__modal-r-watched');\n\n  addToWatchedBtn.addEventListener('click', addToWatchedLS);\n  removeFromWatchedBtn.addEventListener('click', removeFromWatchedLS);\n  addToQueueBtn.addEventListener('click', addToQueueLS);\n  removeFromQueueBtn.addEventListener('click', removeFromQueueLS);\n  //\n\n  document.addEventListener('keydown', onEscapeClick);\n  document.addEventListener('click', onBackdropClick);\n\n  if (storage.checkFilmInWatchedLocStor(curentObject)) {\n    addToWatchedBtn.classList.add('is-hidden');\n    removeFromWatchedBtn.classList.remove('is-hidden');\n  }\n  if (storage.checkFilmInQueueLocStor(curentObject)) {\n    addToQueueBtn.classList.add('is-hidden');\n    removeFromQueueBtn.classList.remove('is-hidden');\n  }\n}\n\nfunction onCloseModal() {\n  refs.backdropOneMovie.classList.add('is-hidden');\n  document.body.classList.remove('modal-open');\n\n  document.removeEventListener('keydown', onEscapeClick);\n  document.removeEventListener('click', onBackdropClick);\n}\n\nfunction getMoviesToLocalhost() {\n  return JSON.parse(localStorage.getItem('currentFilms'));\n}\ngetMoviesToLocalhost();\n\nfunction renderOneMovieForModal({\n  genre_ids,\n  poster_path,\n  original_title,\n  overview,\n  popularity,\n  title,\n  vote_average,\n  vote_count,\n}) {\n  movieDescription.innerHTML = '';\n  const poster = poster_path\n    ? `https://image.tmdb.org/t/p/w500${poster_path}`\n    : `https://image.tmdb.org/t/p/w500/yEvumAoCB9Z7o9dAzjxrjcwo2FQ.jpg`;\n  return (movieDescription.innerHTML = `\n  <div class=\"image__wrap\">\n    <img class=\"image\" src=\"https://image.tmdb.org/t/p/original${poster}\" alt=\"${\n    title || 'No title'\n  }\" />\n  </div>\n  <div class=\"description__wrap\">\n    <h1 class=\"description__title\">${title || 'No title'}</h1>\n    <table>\n      <tr class=\"table__wrap\">\n        <td class=\"description__table\">Vote / Votes</td>\n        <td class=\"description__table-result\">\n          <span class=\"votes\">${vote_average.toFixed(1) || 'No data'}</span> /${\n    vote_count || 'No data'\n  }\n        </td>\n      </tr>\n      <tr class=\"table__wrap\">\n        <td class=\"description__table\">Popularity</td>\n        <td class=\"description__table-result\">${\n          popularity.toFixed(1) || 'No data'\n        }</td>\n      </tr>\n      <tr class=\"table__wrap\">\n        <td class=\"description__table\">Original Title</td>\n        <td class=\"description__table-result\">${\n          original_title || 'No original title'\n        }</td>\n      </tr>\n\n      <tr class=\"table__wrap\">\n        <td class=\"description__table\">Genre</td>\n        <td class=\"description__table-result\">${\n          getGenres(genre_ids, 100) || 'No genres info'\n        }</td>\n      </tr>\n    </table>\n    <p class=\"descrption__about\">ABOUT</p>\n    <p class=\"description__text\">\n     ${overview || 'There is no imformation about this movie'}\n    </p>\n    <ul class=\"btn__wrap\">\n      <li>\n        <button class=\"btn btn__modal-add\">add to Watched</button>\n        <button class=\"btn btn__modal-r-watched is-hidden\">remove from Watched</button>\n      </li>\n      <li>\n        <button class=\"btn btn__modal-queue\">add to queue</button>\n        <button class=\"btn btn__modal-r-queue is-hidden\">remove from queue</button>\n      </li>\n    </ul>\n  </div>\n`);\n}\n\n// function renderOneMovieForModal({\n//   genre_ids,\n//   poster_path,\n//   original_title,\n//   overview,\n//   popularity,\n//   title,\n//   vote_average,\n//   vote_count,\n// }) {\n//   movieDescription.innerHTML = '';\n//   return (movieDescription.innerHTML = `\n//   <div class=\"image__wrap\">\n//     <img class=\"image\" src=\"https://image.tmdb.org/t/p/original${poster_path}\" alt=\"${title}\" />\n//   </div>\n//   <div class=\"description__wrap\">\n//     <h1 class=\"description__title\">путин хуйло</h1>\n//     <table>\n//       <tr class=\"table__wrap\">\n//         <td class=\"description__table\">Vote / Votes</td>\n//         <td class=\"description__table-result\">\n//           <span class=\"votes\">${vote_average.toFixed(1)}</span> /${vote_count}\n//         </td>\n//       </tr>\n//       <tr class=\"table__wrap\">\n//         <td class=\"description__table\">Popularity</td>\n//         <td class=\"description__table-result\">${popularity.toFixed(1)}</td>\n//       </tr>\n//       <tr class=\"table__wrap\">\n//         <td class=\"description__table\">Original Title</td>\n//         <td class=\"description__table-result\">${original_title}</td>\n//       </tr>\n\n//       <tr class=\"table__wrap\">\n//         <td class=\"description__table\">Genre</td>\n//         <td class=\"description__table-result\">${getGenres(genre_ids, 100)}</td>\n//       </tr>\n//     </table>\n//     <p class=\"descrption__about\">ABOUT</p>\n//     <p class=\"description__text\">\n//      ${overview || 'There is no imformation about this movie'}\n//     </p>\n//     <ul class=\"btn__wrap\">\n//       <li>\n//         <button class=\"btn btn__modal-add\">add to Watched</button>\n//         <button class=\"btn btn__modal-r-watched is-hidden\">remove from Watched</button>\n//       </li>\n//       <li>\n//         <button class=\"btn btn__modal-queue\">add to queue</button>\n//         <button class=\"btn btn__modal-r-queue is-hidden\">remove from queue</button>\n//       </li>\n//     </ul>\n//   </div>\n// `);\n// }\n\n//функціонал для ЛС\nfunction addToWatchedLS() {\n  storage.refreshData();\n\n  storage.addToWatchedFilms(currentFilm);\n  storage.saveWatchedFilms();\n\n  //\n\n  addToWatchedBtn.classList.add('is-hidden');\n  removeFromWatchedBtn.classList.remove('is-hidden');\n\n  refs.libGallery.innerHTML = '';\n  renderFilmsLibrary(storage.getWathedFilmsList());\n}\n\nfunction removeFromWatchedLS() {\n  addToWatchedBtn.classList.remove('is-hidden');\n  removeFromWatchedBtn.classList.add('is-hidden');\n\n  storage.removeFromWatched(currentFilm);\n  removeFromDomElement(currentFilm);\n}\n// uquqee\n\nfunction addToQueueLS() {\n  storage.myAddToQueueFilms(currentFilm);\n\n  addToQueueBtn.classList.add('is-hidden');\n  removeFromQueueBtn.classList.remove('is-hidden');\n\n  refs.libGallery.innerHTML = '';\n  renderFilmsLibrary(storage.getQueueFilmsList());\n}\n\nfunction removeFromQueueLS() {\n  addToQueueBtn.classList.remove('is-hidden');\n  removeFromQueueBtn.classList.add('is-hidden');\n\n  storage.removeFromQueue(currentFilm);\n  removeFromDomElement(currentFilm);\n}\n\nfunction removeFromDomElement(objFilm) {\n  const el = document.getElementById(objFilm.id);\n  el.remove();\n}\n","export default class FilmsStorage {\n  constructor() {\n    this._watchedFilmsList = [];\n    this._queueFilmsList = [];\n    this.refreshData();\n    this.refreshDataQueue();\n  }\n  refreshData() {\n    if (localStorage.getItem('watched-films')) {\n      this._watchedFilmsList = JSON.parse(\n        localStorage.getItem('watched-films')\n      );\n    }\n    //console.log('пусто');\n  }\n\n  refreshDataQueue() {\n    if (localStorage.getItem('queue-films')) {\n      this._queueFilmsList = JSON.parse(localStorage.getItem('queue-films'));\n    }\n    return;\n  }\n\n  addToWatchedFilms(item) {\n    if (localStorage.getItem('watched-films')) {\n      this._watchedFilmsList = JSON.parse(\n        localStorage.getItem('watched-films')\n      );\n    }\n    this._watchedFilmsList.push(item);\n    this.saveWatchedFilms();\n  }\n\n  myAddToQueueFilms(film) {\n    if (localStorage.getItem('queue-films')) {\n      this._queueFilmsList = JSON.parse(localStorage.getItem('queue-films'));\n    }\n\n    this._queueFilmsList.push(film);\n    localStorage.setItem('queue-films', JSON.stringify(this._queueFilmsList));\n  }\n\n  addToQueueFilms(item) {\n    if (localStorage.getItem('queue-films')) {\n      this._queueFilmsList = JSON.parse(localStorage.getItem('queue-films'));\n    }\n    this._queueFilmsList.push(item);\n    this.saveQueueFilms();\n  }\n\n  saveWatchedFilms() {\n    localStorage.setItem(\n      'watched-films',\n      JSON.stringify(this._watchedFilmsList)\n    );\n  }\n\n  saveQueueFilms() {\n    localStorage.setItem('queue-films', JSON.stringify(this._queueFilmsList));\n  }\n\n  getWathedFilmsList() {\n    if (!localStorage.getItem('watched-films')) {\n      return;\n    }\n    // this._watchedFilmsList = JSON.parse(localStorage.getItem('watched-films'));\n    return JSON.parse(localStorage.getItem('watched-films'));\n  }\n  getQueueFilmsList() {\n    if (!localStorage.getItem('queue-films')) {\n      return;\n    }\n    // this._queueFilmsList = JSON.parse(localStorage.getItem('queue-films'));\n    return JSON.parse(localStorage.getItem('queue-films'));\n  }\n  removeFromWatched(film) {\n    if (!localStorage.getItem('watched-films')) {\n      return;\n    }\n    this._watchedFilmsList = JSON.parse(localStorage.getItem('watched-films'));\n    const index = this._watchedFilmsList.findIndex(\n      option => option.title === film.title\n    );\n    this._watchedFilmsList.splice(index, 1);\n    this.saveWatchedFilms();\n  }\n  removeFromQueue(film) {\n    if (!localStorage.getItem('queue-films')) {\n      return;\n    }\n    this._queueFilmsList = JSON.parse(localStorage.getItem('queue-films'));\n    const index = this._queueFilmsList.findIndex(\n      option => option.title === film.title\n    );\n    this._queueFilmsList.splice(index, 1);\n    this.saveQueueFilms();\n  }\n\n  checkFilmInWatchedLocStor(film) {\n    if (!localStorage.getItem('watched-films')) {\n      return;\n    }\n    this._watchedFilmsList = JSON.parse(localStorage.getItem('watched-films'));\n    const answer = this._watchedFilmsList.find(\n      option => option.title === film.title\n    );\n    if (answer) {\n      return true;\n    }\n    return false;\n  }\n\n  checkFilmInQueueLocStor(film) {\n    if (!localStorage.getItem('queue-films')) {\n      return;\n    }\n    this._queueFilmsList = JSON.parse(localStorage.getItem('queue-films'));\n    const answer = this._queueFilmsList.find(\n      option => option.title === film.title\n    );\n    if (answer) {\n      return true;\n    }\n    return false;\n  }\n}\n\n//const storage = new FilmsStorage();\n\n//const addToWatchedBtn = document.querySelector('.btn__modal-add');\n\n//addToWatchedBtn.addEventListener('click', addToLS);\n\n//function addToLS() {\n//  console.log(1);\n//}\n"],"names":["$ee27a4d7c64fc8c4$export$21666b427502ea6d","backdrop","document","querySelector","teamLink","spinerBackdrop","filmsListRef","gallery","libGallery","container","getElementById","galleryGenreItem","form","closeModalBtnForOneMovie","modalForOneMovie","backdropOneMovie","btnAddToWatched","btnRemoveFromWatched","btnAddToQuene","btnRemoveFromQuene","$f848a7cb11af0776$export$c5604fa8028da00","genre_ids","maxGenresShown","genres","JSON","parse","localStorage","getItem","genresArr","genreIndex","length","value","id","push","name","join","$f848a7cb11af0776$export$1385a8623dbdd01b","films","map","poster_path","title","release_date","Date","getFullYear","forEach","c","insertAdjacentHTML","$ce3726a01b8ab25a$var$storage","refreshData","this","_watchedFilmsList","refreshDataQueue","_queueFilmsList","addToWatchedFilms","item","saveWatchedFilms","myAddToQueueFilms","film","setItem","stringify","addToQueueFilms","saveQueueFilms","getWathedFilmsList","getQueueFilmsList","removeFromWatched","index","findIndex","option","splice","removeFromQueue","checkFilmInWatchedLocStor","find","checkFilmInQueueLocStor","constructor","$ce3726a01b8ab25a$var$movieDescription","$ce3726a01b8ab25a$var$addToWatchedBtn","$ce3726a01b8ab25a$var$addToQueueBtn","$ce3726a01b8ab25a$var$removeFromWatchedBtn","$ce3726a01b8ab25a$var$removeFromQueueBtn","addEventListener","classList","add","body","remove","removeEventListener","$ce3726a01b8ab25a$var$onEscapeClick","$ce3726a01b8ab25a$var$onBackdropClick","e","element","target","nodeName","$ce3726a01b8ab25a$var$checkClick","curentObject","filmsSet","$ce3726a01b8ab25a$var$getMoviesToLocalhost","$ce3726a01b8ab25a$var$currentFilm","original_title","$ce3726a01b8ab25a$var$findCurrentFilm","alt","overview","popularity","vote_average","vote_count","innerHTML","poster","toFixed","$ce3726a01b8ab25a$var$renderOneMovieForModal","$ce3726a01b8ab25a$var$addToWatchedLS","$ce3726a01b8ab25a$var$removeFromWatchedLS","$ce3726a01b8ab25a$var$addToQueueLS","$ce3726a01b8ab25a$var$removeFromQueueLS","$ce3726a01b8ab25a$var$queueBtn","$ce3726a01b8ab25a$var$wachedBtn","event","code","$ce3726a01b8ab25a$var$removeFromDomElement","objFilm","style","backgroundColor","border"],"version":3,"file":"library.ca363a95.js.map"}